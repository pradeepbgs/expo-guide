root _layout.tsx - 
const menuItems = [
  {
    id: 23,
    title: "23 page"
  },
  {
    id: 29,
    title: "29 page"
  }
]

function CustomDrawer(props: DrawerContentComponentProps) {
  const pathname = usePathname()
  return (
    <DrawerContentScrollView {...props}>

      <View style={{ flexDirection: 'row', alignItems: 'center', marginBottom: 10, gap: 10 }}>
        <Image
          source={{ uri: 'https://images.unsplash.com/photo-1640951613773-54706e06851d?q=80&w=580&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D' }}
          style={{ width: 70, height: 70, borderRadius: 100 }}
        />
        <View>
          <Text style={{ fontWeight: '900' }}>John Doe</Text>
          <Text style={{ fontWeight: '300', fontStyle: 'italic' }}>@johdo</Text>
        </View>
      </View>

      <DrawerItemList {...props} />

      {
        menuItems.map((item) => {
          const isActive = pathname === `/${item.id}`
          return (
            <DrawerItem
              key={item.id}
              activeTintColor='blue'
              focused={isActive}
              label={item.title}
              onPress={() => router.push(`/${item.id}`)}
            />
          )
        })
      }

    </DrawerContentScrollView>
  )
}

export default function Layout() {
  return (
    <GestureHandlerRootView style={{ flex: 1 }}>
      <StatusBar style='dark' />
      <Drawer
        drawerContent={CustomDrawer}
        screenOptions={{
          drawerActiveTintColor: 'blue',
          drawerHideStatusBarOnOpen: false
        }}
      >
        <Drawer.Screen
          name="index"
          options={{
            drawerLabel: 'Home',
            title: 'Home',
            drawerIcon: () => (<Ionicons name='home-sharp' size={20} />)
          }}
        />
        <Drawer.Screen
          name="about"
          options={{
            drawerLabel: 'About',
            title: 'About',
            drawerIcon: () => (<Ionicons name='accessibility-outline' size={20} />)
          }}
        />

        <Drawer.Screen
          name='[id]'
          options={{
            drawerItemStyle: {
              display: 'none'
            }
          }}
        />
        <Drawer.Screen
          name='(tabs)'
          options={{
            drawerItemStyle: {
              display: 'none'
            },
            title: "home"
          }}
        />
      </Drawer>
    </GestureHandlerRootView>
  );
}

